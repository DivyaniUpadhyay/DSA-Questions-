//  LINK OF Q : " https://www.geeksforgeeks.org/problems/longest-subarray-with-sum-divisible-by-k1259/1 "
// plateform GFG 
// Q : iven an array arr containing N integers and a positive integer K, find the length of the longest sub array with sum of the elements divisible by the given value K.

//Example 1:

// Input:
// N = 6, K = 3
// arr[] = {2, 7, 6, 1, 4, 5}
// Output: 
// 4
// Explanation:
// The subarray is {7, 6, 1, 4} with sum 18, which is divisible by 3.

// Program :

class Solution{
    int longSubarrWthSumDivByK(int a[], int n, int k)
    {
        int sum=0;
        int rem = 0;
        int maxLen = 0;
        HashMap <Integer , Integer > map = new HashMap <>();
        map.put(0, -1);
        for(int i =0; i<a.length; i++)
        {
            sum += a[i];
            rem = sum % k;
            if(rem < 0){
                rem += k; // if rem is negative 
              
            }
            if( map.containsKey(rem)){
                int idx = map.get(rem); // 
                int len = i - idx; // length =  current index of rem - previous index of rem
                if(len > maxLen)
                maxLen = len; // update new length if len is greater then previous length
        
            }
            else {
                map.put(rem , i);
            }
       }
          return maxLen;
    }
 
}
